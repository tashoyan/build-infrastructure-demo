<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.tashoyan.build-infra-demo</groupId>
        <artifactId>build-infrastructure-demo</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>distribution</artifactId>
    <packaging>jar</packaging>
    <name>Distribution</name>
    <description>Distribution Package</description>

    <properties>
        <package.resources.build.dir>${project.build.directory}/package-resources</package.resources.build.dir>
        <groovy.bin.package.file>apache-groovy-binary-${groovy.version}.zip</groovy.bin.package.file>
        <rpm.build.dir>${project.build.directory}/rpm-build-dir</rpm.build.dir>
        <zip.build.dir>${project.build.directory}/zip-build-dir</zip.build.dir>
        <rpm.opensource.dir>${rpm.build.dir}/opensource</rpm.opensource.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>java-main</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>package-resources</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>Check dependencies</id>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <ignoredUnusedDeclaredDependencies>
                                    <!--Include these libraries to the package along with their transitive dependencies-->
                                    <ignoredUnusedDeclaredDependency>${project.groupId}:java-main</ignoredUnusedDeclaredDependency>
                                    <!--Include package resources to the package.
                                     Don't include the artifact itself to the package, only the resources from it.-->
                                    <ignoredUnusedDeclaredDependency>${project.groupId}:package-resources</ignoredUnusedDeclaredDependency>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Copy the product libraries</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${rpm.build.dir}/lib</outputDirectory>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                            <excludeArtifactIds>package-resources</excludeArtifactIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Copy third party libraries</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${rpm.build.dir}/lib/ext</outputDirectory>
                            <excludeGroupIds>${project.groupId}</excludeGroupIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Copy source code of open source dependencies</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${rpm.opensource.dir}</outputDirectory>
                            <classifier>sources</classifier>
                            <includeScope>runtime</includeScope>
                            <excludeGroupIds>${project.groupId}</excludeGroupIds>
                            <failOnMissingClassifierArtifact>true</failOnMissingClassifierArtifact>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Unpack package resources</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                            <includeArtifactIds>package-resources</includeArtifactIds>
                            <outputDirectory>${package.resources.build.dir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!--Example of including both binary and source distributions of an open source product-->
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Download Apache Groovy language distribution</id>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <url>https://dl.bintray.com/groovy/maven/${groovy.bin.package.file}</url>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <md5>aa590e6cc8bae924b154ff79d796e18f</md5>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Download Apache Groovy language source code</id>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <url>https://dl.bintray.com/groovy/maven/apache-groovy-src-${groovy.version}.zip</url>
                            <outputDirectory>${rpm.opensource.dir}</outputDirectory>
                            <md5>fd03f32627050dd52a3ae45271ce0cde</md5>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Unpack Apache Groovy language distribution</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <!--Cannot use unzip Ant task - it does not preserve file permissions-->
                                <exec dir="${rpm.build.dir}" executable="unzip">
                                    <arg value="${project.build.directory}/${groovy.bin.package.file}" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Put rpm package resources</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <copy todir="${rpm.build.dir}">
                                    <fileset dir="${package.resources.build.dir}/rpm" />
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Put zip package resources</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <copy todir="${zip.build.dir}">
                                    <fileset dir="${package.resources.build.dir}/zip" />
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <configuration>
                    <group>${distribution.package.rpm.group}</group>
                    <name>${distribution.package.name}</name>
                    <projversion>${distribution.version}</projversion>
                    <release>${distribution.package.rpm.release}</release>
                    <defaultUsername>root</defaultUsername>
                    <defaultGroupname>root</defaultGroupname>
                    <needarch>noarch</needarch>
                    <autoRequires>false</autoRequires>
                    <autoProvides>false</autoProvides>
                    <prefix>${distribution.default.install.dir}</prefix>
                    <summary>${distribution.product.full.name}</summary>
                    <description>${distribution.product.full.name}</description>

                    <mappings>

                        <mapping>
                            <directory>${distribution.default.install.dir}/bin</directory>
                            <sources>
                                <source>
                                    <location>${rpm.build.dir}/bin</location>
                                </source>
                            </sources>
                            <filemode>${mode.file.exec}</filemode>
                            <directoryIncluded>false</directoryIncluded>
                        </mapping>

                        <mapping>
                            <directory>${distribution.default.install.dir}/default-conf</directory>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>${rpm.build.dir}/default-conf</location>
                                </source>
                            </sources>
                            <filemode>${mode.file.data}</filemode>
                            <directoryIncluded>false</directoryIncluded>
                        </mapping>

                        <mapping>
                            <directory>${distribution.default.install.dir}/lib</directory>
                            <sources>
                                <source>
                                    <location>${rpm.build.dir}/lib</location>
                                </source>
                            </sources>
                            <filemode>${mode.file.data}</filemode>
                            <directoryIncluded>false</directoryIncluded>
                        </mapping>

                        <mapping>
                            <directory>${distribution.default.install.dir}/libexec</directory>
                            <sources>
                                <source>
                                    <location>${rpm.build.dir}/libexec</location>
                                </source>
                            </sources>
                            <filemode>${mode.file.data}</filemode>
                            <directoryIncluded>false</directoryIncluded>
                        </mapping>

                        <mapping>
                            <directory>${distribution.default.install.dir}/opensource</directory>
                            <sources>
                                <source>
                                    <location>${rpm.opensource.dir}</location>
                                </source>
                            </sources>
                            <filemode>${mode.file.data}</filemode>
                            <directoryIncluded>false</directoryIncluded>
                        </mapping>

                        <mapping>
                            <directory>${distribution.default.install.dir}/${distribution.groovy.install.dir}</directory>
                            <sources>
                                <source>
                                    <location>${rpm.build.dir}/${distribution.groovy.install.dir}</location>
                                </source>
                            </sources>
                            <directoryIncluded>false</directoryIncluded>
                        </mapping>

                    </mappings>

                    <defineStatements>
                        <!--Prevent rpmbuild from compiling Python files if there are any-->
                        <!--Prevent rpmbuild from repacking jars-->
                        <defineStatement>__os_install_post %(echo '%{__os_install_post}' | \
                            sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g' | \
                            sed -e 's!.*/usr/lib[^[:space:]]*/brp-java-repack-jars.*$!!g')</defineStatement>
                    </defineStatements>

                </configuration>
                <executions>
                    <execution>
                        <id>Generate rpm package</id>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Generate zip distribution</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <finalName>${distribution.package.zip.name}</finalName>
                            <descriptors>
                                <descriptor>${project.basedir}/src/main/assembly/distribution-zip.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <!--Disable default execution, because no jar in this module-->
                        <id>default-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

</project>
